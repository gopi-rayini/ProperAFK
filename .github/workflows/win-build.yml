name: Win EXE
on:
  push:
    branches: [ "dev" , "main"]

jobs:
  build:
    runs-on: windows-latest
    env:
      NODE_VERSION: '20.16.0'
      PYTHON_VERSION: '3.10'
      NPCAP_DIR: 'C:\npcap-sdk'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Python
        id: py
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Npcap SDK
        shell: powershell
        run: |
          $ErrorActionPreference = 'Stop'
          $urls = @(
            'https://npcap.com/dist/npcap-sdk-1.15.zip',
            'https://npcap.com/dist/npcap-sdk-1.13.zip'
          )
          $zip = "$env:RUNNER_TEMP\npcap.zip"
          foreach ($u in $urls) {
            try {
              Write-Host "Downloading $u"
              Invoke-WebRequest -Uri $u -OutFile $zip
              if ((Get-Item $zip).Length -lt 100000) { throw "download too small" }
              Expand-Archive -Path $zip -DestinationPath $env:RUNNER_TEMP -Force
              $folder = Get-ChildItem $env:RUNNER_TEMP -Directory |
                        Where-Object { $_.Name -like 'npcap-sdk*' } |
                        Select-Object -First 1
              if ($folder) {
                if (Test-Path 'C:\npcap-sdk') { Remove-Item -Recurse -Force 'C:\npcap-sdk' }
                Move-Item -Force $folder.FullName 'C:\npcap-sdk'
                break
              } else {
                throw "sdk folder not found"
              }
            } catch {
              Write-Host "Attempt failed: $($_.Exception.Message)"
              if (Test-Path $zip) { Remove-Item $zip -Force }
            }
          }
          if (-not (Test-Path 'C:\npcap-sdk\Include')) { throw 'Npcap SDK install failed' }
          Add-Content -Path $env:GITHUB_ENV -Value "INCLUDE=C:\npcap-sdk\Include;$env:INCLUDE"
          Add-Content -Path $env:GITHUB_ENV -Value "LIB=C:\npcap-sdk\Lib\x64;$env:LIB"


      - name: Configure node-gyp
        shell: powershell
        run: |
          Add-Content -Path "$env:USERPROFILE\.npmrc" -Value "msvs_version=2022"
          Add-Content -Path "$env:USERPROFILE\.npmrc" -Value "python=${{ steps.py.outputs.python-path }}"

      - name: Install deps
        run: npm ci

      - name: Build EXE
        run: npm run dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bpsr-meter-win
          path: |
            dist/**/*.exe
            dist/win-unpacked/**
