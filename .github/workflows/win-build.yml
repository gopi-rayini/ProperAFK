name: Win EXE
on:
  push:
    branches: [ "dev" , "main"]

jobs:
  build:
    runs-on: windows-latest
    env:
      NODE_VERSION: '20.16.0'
      PYTHON_VERSION: '3.10'
      NPCAP_DIR: 'C:\npcap-sdk'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Python
        id: py
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Npcap SDK
        shell: powershell
        run: |
          $ErrorActionPreference='Stop'
          $urls=@(
            'https://npcap.com/dist/npcap-sdk-latest.zip',
            'https://nmap.org/npcap/dist/npcap-sdk-1.13.zip'
          )
          $zip="$env:RUNNER_TEMP\npcap.zip"
          $dst=Join-Path $env:RUNNER_TEMP 'npcap'
          New-Item -ItemType Directory -Force -Path $dst | Out-Null
          foreach($u in $urls){
            try{
              Invoke-WebRequest -Uri $u -OutFile $zip -Headers @{ 'User-Agent'='Mozilla/5.0' }
              Expand-Archive -Path $zip -DestinationPath $dst -Force
              break
            } catch {
              if(Test-Path $zip){ Remove-Item $zip -Force }
            }
          }
          $root = Get-ChildItem $dst -Recurse -Directory |
                  Where-Object {
                    Test-Path (Join-Path $_.FullName 'Include\pcap.h') -or
                    Test-Path (Join-Path $_.FullName 'Include\pcap\pcap.h')
                  } | Select-Object -First 1
          if(-not $root){
            Get-ChildItem $dst -Recurse | Format-List FullName
            throw 'Npcap SDK not found'
          }
          $lib64 = Join-Path $root.FullName 'Lib\x64'
          $lib   = (Test-Path $lib64) ? $lib64 : (Join-Path $root.FullName 'Lib')
          Add-Content -Path $env:GITHUB_ENV -Value "NPCAP_SDK_ROOT=$($root.FullName)"
          Add-Content -Path $env:GITHUB_ENV -Value "INCLUDE=$($root.FullName)\Include;$env:INCLUDE"
          Add-Content -Path $env:GITHUB_ENV -Value "LIB=$lib;$env:LIB"

      - name: Configure node-gyp
        shell: powershell
        run: |
          Add-Content -Path "$env:USERPROFILE\.npmrc" -Value "msvs_version=2022"
          Add-Content -Path "$env:USERPROFILE\.npmrc" -Value "python=${{ steps.py.outputs.python-path }}"

      - name: Install deps
        run: npm ci

      - name: Build EXE
        run: npm run dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: bpsr-meter-win
          path: |
            dist/**/*.exe
            dist/win-unpacked/**
